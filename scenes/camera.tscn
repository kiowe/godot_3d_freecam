[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Position3D

const MAX_DIST = 10
const MIN_DIST = 1

export(NodePath) var target_node
export(Vector3) var offset
export var max_dist = 4 setget set_max_dist

var camera
var target

var is_control = false
var is_turn = false

func _ready():
	G.camera = self
	target = get_node(target_node)
	camera = $Camera
	is_control = target.has_method('control')
	is_turn = target.has_method('turn')
	upd_detector()

func _process(delta):
	transform.origin = target.transform.origin + offset
	
	if is_turn:
		target.turn(rotation.y, delta)
	if is_control:
		target.control()
	
	if $Detector.is_colliding():
		camera.transform.origin.z = $Detector.get_collision_point().distance_to(global_transform.origin) - 0.5
	else:
		camera.transform.origin.z = max_dist

func set_max_dist(md):
	max_dist = clamp(md, MIN_DIST, MAX_DIST)

func upd_detector():
	$Detector.cast_to.z = max_dist

func _input(e):
	if e is InputEventMouseMotion:
		rotation.y -= e.relative.x * 0.01
		rotation.x = clamp(rotation.x - e.relative.y * 0.01, -1.5, 0.5)
	elif e is InputEventMouseButton:
		if e.button_index == 4: # Mouse scroll up
			self.max_dist -= 0.5
			upd_detector()
		elif e.button_index == 5: # Mouse scroll down
			self.max_dist += 0.5
			upd_detector()
"

[node name="camera" type="Position3D"]
script = SubResource( 1 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 4 )

[node name="Detector" type="RayCast" parent="."]
enabled = true
cast_to = Vector3( 0, 0, 4 )
